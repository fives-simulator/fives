variables:
  RUNNER_COUNT: 3

stages:
  - build_deps
  - build
  - test

build_simgrid_v3.34:
  stage: build_deps
  parallel: $RUNNER_COUNT
  script: 
    - cd /builds/deps/simgrid
    - git checkout v3.34
    - cmake -DCMAKE_INSTALL_PREFIX=/opt/simgrid .
    - make -j 4
    - sudo make install
  tags:
    - storalloc
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[sg3.34\]$/
    - if: $CI_COMMIT_MESSAGE =~ /\[stable\]$/
    - when: manual
  allow_failure: false

build_wrench_master:
  stage: build_deps
  parallel: $RUNNER_COUNT
  script:
    - cd /builds/deps/wrench/build
    - SimGrid_PATH=/opt/simgrid cmake ..
    - make -j 4
    - sudo make install
  tags:
    - storalloc
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[wrenchmaster\]$/
    - if: $CI_COMMIT_MESSAGE =~ /\[stable\]$/
    - when: manual
  allow_failure: false

build_simgrid_master:
  stage: build_deps
  parallel: $RUNNER_COUNT
  script: 
    - cd /builds/deps/simgrid
    - git checkout master
    - git pull origin master
    - cmake -DCMAKE_INSTALL_PREFIX=/opt/simgrid .
    - make -j 4
    - sudo make install
  tags:
    - storalloc
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[sg_master\]$/
    - if: $CI_COMMIT_MESSAGE =~ /\[exp\]$/
    - when: manual
  allow_failure: false

build_wrench_simgrid_master:
  stage: build_deps
  parallel: $RUNNER_COUNT
  script:
    - cd /builds/deps/wrench/
    - git checkout simgrid_master
    - cd build/
    - SimGrid_PATH=/opt/simgrid cmake ..
    - make -j 4
    - sudo make install
  tags:
    - storalloc
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[wrench_sgmaster\]$/
    - if: $CI_COMMIT_MESSAGE =~ /\[exp\]$/
    - when: manual
  allow_failure: false

build-job:
  stage: build
  script:
    - echo "Starting build on runner $CI_RUNNER_ID for commit $CI_COMMIT_SHORT_SHA"
    - ls -la
    - cmake --version
    - g++ --version
    - date
    - mkdir build
    - cd build
    - cmake ..
    - make -j 4
    - make -j 4 unit_tests
  tags:
    - build
  artifacts:
    paths:
      - "build/"
    expire_in: 2 day

test-job:
  stage: test
  script:
    - echo "Starting unit_tests on runner $CI_RUNNER_ID for commit $CI_COMMIT_SHORT_SHA"
    - ls -la 
    - cmake --version
    - g++ --version
    - date
    - cd build
    - ./unit_tests
  dependencies:
    - build-job
  tags:
    - build
 
functional-test-job:
  stage: test
  script:
    - cd functional_test
    - pip install --user -r requirements.txt
    - chmod u+x functional_test.py
    - ./functional_test.py
  dependencies:
    - build-job
  tags:
    - simulation
  artifacts:
    name: "$CI_COMMIT_REF_NAME-sim_log.txt"
    paths:
      - functional_test/simulation_logs.txt
    expire_in: 2 weeksÂ²